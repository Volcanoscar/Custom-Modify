From 126c3c24405209840529fd1c51ee9776f3f5b4cc Mon Sep 17 00:00:00 2001
From: chehongbin <chehongbin@hkzechin.com>
Date: Mon, 29 Aug 2016 16:01:52 +0800
Subject: [PATCH] =?UTF-8?q?[POSH][XC-49]=E4=BF=AE=E5=A4=8D=EF=BC=9AMTP?=
 =?UTF-8?q?=E6=A8=A1=E5=BC=8F=E4=B8=8B=E9=94=81=E5=B1=8F=E7=95=8C=E9=9D=A2?=
 =?UTF-8?q?=E6=8F=92=E5=85=A5USB=E8=BF=9E=E6=8E=A5=E7=94=B5=E8=84=91?=
 =?UTF-8?q?=EF=BC=8CPC=E7=AB=AF=E5=8F=AF=E4=BB=A5=E8=AF=BB=E5=8F=96?=
 =?UTF-8?q?=E6=89=8B=E6=9C=BA=E5=AD=98=E5=82=A8=E4=B8=AD=E4=BB=BB=E6=84=8F?=
 =?UTF-8?q?=E4=BF=A1=E6=81=AF?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 .../com/android/providers/media/MtpService.java    | 33 +++++++++++++++++++++-
 1 file changed, 32 insertions(+), 1 deletion(-)

diff --git a/alps/packages/providers/MediaProvider/src/com/android/providers/media/MtpService.java b/alps/packages/providers/MediaProvider/src/com/android/providers/media/MtpService.java
index c6e2286..675e09c 100755
--- a/alps/packages/providers/MediaProvider/src/com/android/providers/media/MtpService.java
+++ b/alps/packages/providers/MediaProvider/src/com/android/providers/media/MtpService.java
@@ -17,6 +17,7 @@
 package com.android.providers.media;
 
 import android.app.ActivityManager;
+import android.app.KeyguardManager;
 import android.app.Service;
 import android.content.BroadcastReceiver;
 import android.content.Context;
@@ -66,6 +67,33 @@ public class MtpService extends Service {
         }
     }
 
+    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            /// M: ALPS00120037, add log for support MTP debugging @{
+
+            final String action = intent.getAction();
+            if (Intent.ACTION_USER_PRESENT.equals(action)) {
+                // If the media scanner is running, it may currently be calling
+                // sendObjectAdded/Removed, which also synchronizes on mBinder
+                // (and in addition to that, all the native MtpServer methods
+                // lock the same Mutex). If it happens to be in an mtp device
+                // write(), it may block for some time, so process this broadcast
+                // in a thread.
+                new Thread(new Runnable() {
+                    @Override
+                    public void run() {
+                        synchronized (mBinder) {
+                            // Unhide the storage units when the user has unlocked the lockscreen
+                            if (mMtpDisabled) {
+                                addStorageDevicesLocked();
+                                mMtpDisabled = false;
+                            }
+                        }
+                    }}, "addStorageDevices").start();
+            }
+        }
+    };
     private final StorageEventListener mStorageEventListener = new StorageEventListener() {
         @Override
         public void onStorageStateChanged(String path, String oldState, String newState) {
@@ -97,6 +125,7 @@ public class MtpService extends Service {
 
     @Override
     public void onCreate() {
+        registerReceiver(mReceiver, new IntentFilter(Intent.ACTION_USER_PRESENT));
         // for storage update
         registerReceiver(mLocaleChangedReceiver, new IntentFilter(Intent.ACTION_LOCALE_CHANGED));
         mStorageManager = StorageManager.from(this);
@@ -151,7 +180,8 @@ public class MtpService extends Service {
 
     private void updateDisabledStateLocked() {
         final boolean isCurrentUser = UserHandle.myUserId() == ActivityManager.getCurrentUser();
-        mMtpDisabled = !mUnlocked || !isCurrentUser;
+		final KeyguardManager keyguardManager = (KeyguardManager) getSystemService(Context.KEYGUARD_SERVICE);
+        mMtpDisabled = (keyguardManager.isKeyguardLocked() && keyguardManager.isKeyguardSecure()) || !mUnlocked || !isCurrentUser;
         if (LOGD) {
             Log.d(TAG, "updating state; isCurrentUser=" + isCurrentUser + ", mMtpLocked="
                     + mMtpDisabled);
@@ -182,6 +212,7 @@ public class MtpService extends Service {
 
     @Override
     public void onDestroy() {
+        unregisterReceiver(mReceiver);
         mStorageManager.unregisterListener(mStorageEventListener);
         if (mDatabase != null) {
             mDatabase.setServer(null);
-- 
2.3.7

